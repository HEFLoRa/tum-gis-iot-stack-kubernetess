{{- if .Values.enabled -}}
{{- if not .Values.persistence.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodered.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "nodered.labels" . | nindent 4 }}
    app.kubernetes.io/part-of: tum-gis-iot-stack-k8s
    app.kubernetes.io/component: {{ .Values.component }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nodered.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Values.component }}

  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/configmap-settings: {{ include (print $.Template.BasePath "/nodered-configMap-settings.yml") . | sha256sum }}
        checksum/configmap: {{ include (print $.Template.BasePath "/nodered-configMap.yml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/nodered-secret.yml") . | sha256sum }}
      labels:
        {{- include "nodered.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Values.component }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nodered.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: settings
          configMap:
            name: {{ include "nodered.fullname" . }}-settings
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "nodered.fullname" . }}
            - secretRef:
                name: {{ include "nodered.fullname" . }}

          command: [ "node-red" ]
          args:
            - "-v"
            - "-s"
            - "/settings/settings.js"

          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            exec:
              command: [ bash, -c, 'curl http://localhost:1880/ || exit 1' ]
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
            exec:
              command: [ bash, -c, 'curl http://localhost:1880/ || exit 1' ]

          volumeMounts:
            - name: settings
              mountPath: "/settings"
              readOnly: true

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
{{- end -}}

# Deployment ------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx-depl
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx-pod
  template:
    metadata:
      labels:
        app: nginx-pod
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80

---

# Service ---------------------------------------------------------------------
apiVersion: v1
kind: Service # Create service
metadata:
  name: nginx-service # Sets the service name
  labels:
    app: nginx-depl # Defines app to create service for
spec:
  type: ClusterIP # Sets the service type
  ports:
    - name: http-port
      protocol: TCP
      port: 9999
      targetPort: 80
  selector:
    app: nginx-pod
---

# Ingress Nginx ----------------------------------------------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    # kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2"
    cert-manager.io/issuer: "letsencrypt-staging"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - sta.savenow.de
    secretName: cert-sta.savenow.de
  rules:
  - host: sta.savenow.de
    http:
      paths:
      - path: /nginx(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 9999
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 9999

# Ingress Caddy with host -----------------------------------------------------
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-app-ingress
#   annotations:
#     # nginx.ingress.kubernetes.io/rewrite-target: /
#     # nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     # kubernetes.io/ingress.class: "nginx"
# spec:
#   ingressClassName: caddy
#   rules:
#   -
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: nginx-service
#             port:
#               number: 8080

# Ingress Caddy ----------------------------------------------------------------
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-app-ingress
#   annotations:
#     # nginx.ingress.kubernetes.io/rewrite-target: /
#     # nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     # kubernetes.io/ingress.class: "nginx"
# spec:
#   ingressClassName: caddy
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Exact
#         backend:
#           service:
#             name: nginx-service
#             port:
#               number: 8080
